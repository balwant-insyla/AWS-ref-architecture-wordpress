AWSTemplateFormatVersion: '2010-09-09'
Description: Minimal AWS Distributed Load Testing Solution

Parameters:
  AdminEmail:
    Type: String
    Description: Email address for notifications
    AllowedPattern: ^[^\s@]+@[^\s@]+\.[^\s@]+$

Resources:
  ResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TestConfigTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: testId
          AttributeType: S
      KeySchema:
        - AttributeName: testId
          KeyType: HASH

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LoadTestPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !GetAtt TestConfigTable.Arn
              - Effect: Allow
                Action:
                  - s3:*
                Resource: 
                  - !GetAtt ResultsBucket.Arn
                  - !Sub "${ResultsBucket.Arn}/*"

  LoadTestFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Code:
        ZipFile: |
          import json
          def handler(event, context):
              return {'statusCode': 200, 'body': json.dumps('Load test manager ready')}

  NotificationTopic:
    Type: AWS::SNS::Topic

  NotificationSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref NotificationTopic
      Protocol: email
      Endpoint: !Ref AdminEmail

Outputs:
  BucketName:
    Value: !Ref ResultsBucket
  TableName:
    Value: !Ref TestConfigTable
  FunctionName:
    Value: !Ref LoadTestFunction